var search_data = {"index":{"searchIndex":["ceo","engineer","foo","manager","notinveribleerror","object","bar()","divide()","do_work()","implement_vision()","inverse()","new()","new_vision()","raise_and_rescue()","rescue_and_retry()","sum()","application.log"],"longSearchIndex":["ceo","engineer","foo","manager","notinveribleerror","object","foo#bar()","object#divide()","engineer::do_work()","manager::implement_vision()","object#inverse()","foo::new()","ceo::new_vision()","object#raise_and_rescue()","object#rescue_and_retry()","object#sum()",""],"info":[["CEO","","CEO.html","","<p>Example This Ruby program simulates a company with a top-down management\nstyle: one method delegates …\n"],["Engineer","","Engineer.html","",""],["Foo","","Foo.html","","<p>Solution New to Ruby 2.1 is a debug library. As soon as you require debug,\nthe execution hits a breakpoint …\n"],["Manager","","Manager.html","",""],["NotInveribleError","","NotInveribleError.html","","<p>Define you own Exception subclass\n"],["Object","","Object.html","",""],["bar","Foo","Foo.html#method-i-bar","()",""],["divide","Object","Object.html#method-i-divide","(numerator ,denominator)","<p>Example This code uses the application’s logger to print a debugging\nmessage, and (at a higher severity) …\n"],["do_work","Engineer","Engineer.html#method-c-do_work","()",""],["implement_vision","Manager","Manager.html#method-c-implement_vision","()",""],["inverse","Object","Object.html#method-i-inverse","(x)",""],["new","Foo","Foo.html#method-c-new","(init_value)",""],["new_vision","CEO","CEO.html#method-c-new_vision","()",""],["raise_and_rescue","Object","Object.html#method-i-raise_and_rescue","()","<p>Example\n"],["rescue_and_retry","Object","Object.html#method-i-rescue_and_retry","()","<p>Here’s a demonstration of the retry statement. The first time the code\nblock runs, it raises an exception. …\n"],["sum","Object","Object.html#method-i-sum","(*terms)","<p>Takes any number of numeric terms and returns the sum.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">sum</span>(<span class=\"ruby-value\">1</span>, <span class=\"ruby-value\">2</span>, <span class=\"ruby-value\">3</span>)                             <span class=\"ruby-comment\"># =&gt; 6 ...</span>\n</pre>\n"],["application.log","","application_log.html","","<p># Logfile created on 2015-09-17 17:15:06 +0530 by logger.rb/47272 D,\n[2015-09-17T17:15:06.222888 #31497] …\n"]]}}